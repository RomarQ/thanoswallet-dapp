import{nanoid as e}from"nanoid";import{TezosToolkit as t,createTransferOperation as n,createOriginationOperation as s,createSetDelegateOperation as a}from"@taquito/taquito";var o,r,i;function c(){return new Promise(e=>{const t=e=>{var t,s;e.source===window&&(null===(t=e.data)||void 0===t?void 0:t.type)===i.Response&&"PONG"===(null===(s=e.data)||void 0===s?void 0:s.payload)&&n(!0)},n=n=>{e(n),window.removeEventListener("message",t),clearTimeout(s)};E({type:i.Request,payload:"PING"}),window.addEventListener("message",t);const s=setTimeout(()=>n(!1),500)})}function u(e){let t,n=!1;const s=async(a=0)=>{const o=a<5,r=await c();n!==r&&(e(r),n=r),t=setTimeout(s,r?1e4:o?0:5e3,o?a+1:a)};return s(),()=>clearTimeout(t)}async function p(e,t,n){const s=await h({type:o.PermissionRequest,network:e,appMeta:t,force:n});return R(s.type===o.PermissionResponse),{pkh:s.pkh,rpc:s.rpc}}async function d(e,t){const n=await h({type:o.OperationRequest,sourcePkh:e,opParams:t});return R(n.type===o.OperationResponse),n.opHash}async function l(e,t){const n=await h({type:o.SignRequest,sourcePkh:e,payload:t});return R(n.type===o.SignResponse),n.signature}async function m(e){const t=await h({type:o.BroadcastRequest,signedOpBytes:e});return R(t.type===o.BroadcastResponse),t.opHash}function h(t){return new Promise((n,s)=>{const a=e(),o=e=>{const t=e.data;switch(!0){case e.source!==window||(null==t?void 0:t.reqId)!==a:return;case(null==t?void 0:t.type)===i.Response:n(t.payload),window.removeEventListener("message",o);break;case(null==t?void 0:t.type)===i.ErrorResponse:s(function(e){switch(!0){case e===r.NotGranted:return new w;case e===r.NotFound:return new y;case e===r.InvalidParams:return new S;case null==e?void 0:e.startsWith("__tezos__"):return new Error(e.replace("__tezos__",""));default:return new P}}(t.payload)),window.removeEventListener("message",o)}};E({type:i.Request,payload:t,reqId:a}),window.addEventListener("message",o)})}function R(e){if(!e)throw new Error("Invalid response recieved")}function E(e){window.postMessage(e,"*")}!function(e){e.PermissionRequest="PERMISSION_REQUEST",e.PermissionResponse="PERMISSION_RESPONSE",e.OperationRequest="OPERATION_REQUEST",e.OperationResponse="OPERATION_RESPONSE",e.SignRequest="SIGN_REQUEST",e.SignResponse="SIGN_RESPONSE",e.BroadcastRequest="BROADCAST_REQUEST",e.BroadcastResponse="BROADCAST_RESPONSE"}(o||(o={})),function(e){e.NotGranted="NOT_GRANTED",e.NotFound="NOT_FOUND",e.InvalidParams="INVALID_PARAMS"}(r||(r={})),function(e){e.Request="THANOS_PAGE_REQUEST",e.Response="THANOS_PAGE_RESPONSE",e.ErrorResponse="THANOS_PAGE_ERROR_RESPONSE"}(i||(i={}));class P{constructor(){this.name="ThanosWalletError",this.message="An unknown error occured. Please try again or report it"}}class w extends P{constructor(){super(...arguments),this.name="NotGrantedThanosWalletError",this.message="Permission Not Granted"}}class y extends P{constructor(){super(...arguments),this.name="NotFoundThanosWalletError",this.message="Account Not Found. Try connect again"}}class S extends P{constructor(){super(...arguments),this.name="InvalidParamsThanosWalletError",this.message="Some of the parameters you provided are invalid"}}class N{constructor(e){this.appName=e}get connected(){return Boolean(this.pkh)}toTezos(){O(this.pkh);const e=new t;return e.setProvider({wallet:this,rpc:this.rpc}),e}async connect(e,t={forcePermission:!1}){const{pkh:n,rpc:s}=await p(e,{name:this.appName},t.forcePermission);this.pkh=n,this.rpc=s}async getPKH(){return O(this.pkh),this.pkh}async mapTransferParamsToWalletParams(e){return n(e)}async mapOriginateParamsToWalletParams(e){return s(e)}async mapDelegateParamsToWalletParams(e){return a(e)}async sendOperations(e){return O(this.pkh),d(this.pkh,e.map(v))}async sign(e){return O(this.pkh),l(this.pkh,e)}async broadcast(e){return O(this.pkh),m(e)}}N.isAvailable=c,N.onAvailabilityChange=u;class T extends P{constructor(){super(...arguments),this.name="ThanosWalletNotConnected",this.message="You need to connect ThanosWallet by calling thanosWallet.connect() first"}}function O(e){if(!e)throw new T}function v(e){const{...t}=e;if("transaction"===e.kind){const{destination:e,amount:n,parameters:s,...a}=t;return{...a,to:e,amount:+n,mutez:!0,parameter:s}}return t}export{S as InvalidParamsThanosWalletError,T as NotConnectedThanosWalletError,y as NotFoundThanosWalletError,w as NotGrantedThanosWalletError,r as ThanosDAppErrorType,o as ThanosDAppMessageType,i as ThanosPageMessageType,N as ThanosWallet,P as ThanosWalletError,c as isAvailable,u as onAvailabilityChange,m as requestBroadcast,d as requestOperation,p as requestPermission,l as requestSign};
//# sourceMappingURL=index.modern.js.map
